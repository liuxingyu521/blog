---
import type { SiteMeta } from "@/data/siteMeta";
import BaseHead from "@/components/BaseHead";
import Header from "@/components/layout/Header";
import Footer from "@/components/layout/Footer";
import SkipLink from "@/components/SkipLink";
import siteConfig from "@/site-config";

interface Props {
	meta: SiteMeta;
}

const {
	meta: { title, description = siteConfig.description, ogImage, articleDate },
} = Astro.props;
---

<html lang={siteConfig.lang}>
	<head>
		<BaseHead title={title} description={description} ogImage={ogImage} articleDate={articleDate} />
		<script define:vars={{ siteConfig }} is:inline>
			const root = document.documentElement;
			const colorThemeMetaTag = document.querySelector("meta[name='theme-color']");

			// get user preference of dark mode, 1st local storage, 2nd browser
			function getThemePreference() {
				if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
					return localStorage.getItem("theme");
				}
				return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
			}

			const isDark = getThemePreference() === "dark";
			// watch document element class attribute and update user preference when it changes.
			const observer = new MutationObserver(() => {
				const rootIsDark = root.getAttribute('data-theme') === 'dark';
				// set the meta attribute
				colorThemeMetaTag.setAttribute(
					"content",
					siteConfig[rootIsDark ? "themeColorDark" : "themeColorLight"]
				);

        localStorage.setItem('theme', rootIsDark ? 'dark' : 'light')
			});
			observer.observe(root, { attributeFilter: ["data-theme"] });

      if (localStorage.getItem("theme") === null) {
        document.documentElement.setAttribute("data-theme", isDark ? 'dark' : 'light');

      } else
        document.documentElement.setAttribute(
          "data-theme",
          localStorage.getItem("theme")
        );
		</script>
    <script>
      import { themeChange } from 'theme-change';
      themeChange();
    </script>
    <slot name="in-head" />
	</head>
	<body>
		<SkipLink />
		<Header />
		<main id="main" class="flex-1">
			<slot />
		</main>
		<Footer />
	</body>
</html>
